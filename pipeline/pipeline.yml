resources:
  # Sample Go app in a GitRepo
  - name: go_repo
    type: GitRepo
    configuration:
      path: lsilvapvt/redis-probe
      branches:
        include: master
      gitProvider: acme_co_github

  # Build info for the published Go app
  - name: go_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: acme_co_artifactory
  # Build info for the staging promoted Go app
  - name: go_stage_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: acme_co_artifactory
  # Build info for the published Go app
  - name: go_dockerbuildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: acme_co_artifactory
  # Build info for the production promoted Go app
  - name: go_prod_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: acme_co_artifactory

  - name: go_build_binary
    type: FileSpec
    configuration:
      sourceArtifactory: acme_co_artifactory
      pattern: "go-stage-local/redis-probe-files/*/redis-probe-linux"
      recursive: false
      flat: true
      buildName: go_redis_probe_build
      buildNumber: ${res_go_buildinfo_buildNumber}"

pipelines:
  - name: go_redis_probe_build
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: go
            versions:
              - "1.14.4"      
    steps:
      - name: redis_probe
        type: GoBuild
        configuration:
          sourceLocation: ./src
          resolverRepo: go-virtual
          noRegistry: true
          inputResources:
            - name: go_repo
          integrations:
            - name: acme_co_artifactory

      # Publish the Go sample app binary to Artifactory. Docs at https://www.jfrog.com/confluence/display/JFROG/GoPublishBinary
      - name: publish_go_binary
        type: GoPublishBinary
        configuration:
          inputSteps:
            - name: redis_probe
          targetRepository: go-local/redis-probe-files/${run_number}/redis-probe-linux
          integrations:
            - name: acme_co_artifactory

      # Publish the Go sample app build info. Docs at https://www.jfrog.com/confluence/display/JFROG/PublishBuildInfo
      - name: publish_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: publish_go_binary
          outputResources:
            - name: go_buildinfo

  - name: go_redis_probe_test_promote
    steps:
      - name: func_test_Ubuntu
        type: Bash
        configuration:
          nodePool: default-dynamic-nodepool
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_buildinfo
        execution:
          onStart:
            - echo "Your pre-test1 scripts are invoked here"
            - jfrog rt dl go-local/redis-probe-files/${res_go_buildinfo_buildNumber}/redis-probe-linux --flat
            - chmod 755 ./redis-probe-linux
            - ls -latr
          onExecute:
            - echo "Build name= ${res_go_buildinfo_buildName}"
            - echo "Build number= ${res_go_buildinfo_buildNumber}"
            - lsb_release -a
            - echo "Your test 1 scripts are invoked here."
            - ls -latr

      - name: func_test_CentOS
        type: Bash
        configuration:
          nodePool: centos8
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_buildinfo
        execution:
          onStart:
            - echo "Your pre-test1 scripts are invoked here"
            - jfrog rt dl go-local/redis-probe-files/${res_go_buildinfo_buildNumber}/redis-probe-linux --flat
            - chmod 755 ./redis-probe-linux
            - ls -latr
          onExecute:
            - echo "Build name= ${res_go_buildinfo_buildName}"
            - echo "Build number= ${res_go_buildinfo_buildNumber}"
            - cat /etc/centos-release 
            - echo "Your test 2 scripts are invoked here."
            - ls -latr

      - name: security_scan
        type: XrayScan
        configuration:
          inputResources:
            - name: go_buildinfo 
          inputSteps:
            - name: func_test_Ubuntu
            - name: func_test_CentOS

      - name: parameters_tests
        type: Matrix
        stepMode: Bash
        configuration:
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_buildinfo
          inputSteps:
            - name: security_scan 

        stepletMultipliers:
          environmentVariables:                         # Sets of environment variables for steplets
            - subCommand:      ping                     # - Set 1
              # REDIS_SERVER_ADDRESS:   "server1.example.com"
            - subCommand:      set                      # - Set 2
              # REDIS_SERVER_ADDRESS:   "server1.example.com"
      
        execution:
          onStart:
            - echo "Your pre-test1 scripts are invoked here"
            - jfrog rt dl go-local/redis-probe-files/${res_go_buildinfo_buildNumber}/redis-probe-linux --flat
            - chmod 755 ./redis-probe-linux
            - ls -latr
          onExecute:
          - echo "I am executing matrix steplet ${steplet_id}"
          - echo "Environments subCommand [${subCommand}], REDIS_SERVER_ADDRESS [${REDIS_SERVER_ADDRESS}]"
          - echo "Runtime image name $step_image_name , Runtime image name ${step_image_tag}"
          - echo "Build name= ${res_go_stage_buildinfo_buildName}"
          - echo "Build number= ${res_go_stage_buildinfo_buildNumber}"
          - echo "Your integration test scripts are invoked here."

      - name: promote_stage
        type: PromoteBuild
        configuration:
          targetRepository: go-stage-local
          includeDependencies: true
          copy: true
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_buildinfo
          outputResources:
            - name: go_stage_buildinfo
          inputSteps:
            - name: parameters_tests  



  - name: go_redis_probe_docker_build
    steps:
      - name: pre-checks
        type: Bash
        configuration:
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_stage_buildinfo
            - name: go_buildinfo
        execution:
          onExecute:
            - echo "go_buildinfo name= ${res_go_buildinfo_buildName}"
            - echo "go_buildinfo number= ${res_go_buildinfo_buildNumber}"
            - echo "go_stage_buildinfo name= ${res_go_stage_buildinfo_buildName}"
            - echo "go_stage_buildinfo number= ${res_go_stage_buildinfo_buildNumber}"

      - name: build_image
        type: DockerBuild
        configuration:
          affinityGroup: docker_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: soleng.jfrog.io/docker-stage-local/redis-probe        # replace with your fully qualified Docker registry/image name
          dockerImageTag: ${res_go_buildinfo_buildNumber}
          inputResources:
            - name: go_stage_buildinfo
            - name: go_buildinfo
            - name: go_repo
            - name: go_build_binary
          inputSteps:
            - name: pre-checks
          integrations:
            - name: acme_co_artifactory
          # environmentVariables:
          #   JFROG_CLI_BUILD_NAME: ${res_go_buildinfo_buildName}
          #   JFROG_CLI_BUILD_NUMBER: ${res_go_buildinfo_buildNumber}

      - name: publish_dockerbuild
        type: DockerPush
        configuration:
          targetRepository: docker-stage-local
          affinityGroup: docker_group
          autoPublishBuildInfo: true   
          forceXrayScan: false
          failOnScan: false
          integrations:
            - name: acme_co_artifactory
          inputSteps:
            - name: build_image
          outputResources:
            - name: go_dockerbuildinfo

      - name: test_docker_image
        type: Bash
        configuration:
          integrations:
            - name: acme_co_artifactory
          inputResources:
            - name: go_dockerbuildinfo
          inputSteps:
            - name: publish_dockerbuild
        execution:
          onStart:
            - echo "Your pre-test1 scripts are invoked here"
          onExecute:
            - echo "Docker Build name= ${res_go_dockerbuildinfo_buildName}"
            - echo "Docker Build number= ${res_go_dockerbuildinfo_buildNumber}"
            - echo "Your docker image test scripts are invoked here."

      ## TBD add gate step here

      # - name: promote_docker_prod
      #   type: PromoteBuild
      #   configuration:
      #     targetRepository: go-prod-local
      #     includeDependencies: true
      #     copy: true
      #     integrations:
      #       - name: acme_co_artifactory
      #     inputResources:
      #       - name: go_stage_buildinfo
      #     outputResources:
      #       - name: go_prod_buildinfo
      #     inputSteps:
      #       - name: test_docker_image            